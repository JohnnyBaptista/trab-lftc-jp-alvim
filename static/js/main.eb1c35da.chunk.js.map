{"version":3,"sources":["components/pages/Home.js","components/pages/Regex.js","components/pages/Gramatica.js","components/pages/AutoFin.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","redirectFlag","setRedirectFlag","Container","maxWidth","style","styles","container","text","to","renderRedirect","menu","button","onClick","height","display","justifyContent","alignItems","flexDirection","width","fontSize","textAlign","fontStyle","Regex","userInput","setUserInput","inputs","setInputs","validate","e","regex","RegExp","string","target","value","exec","borderColor","header","Tooltip","title","color","main","type","onChange","input","Divider","padding","alignSelf","map","item","placeholder","footer","length","slice","helper","HtmlTooltip","placement","Fragment","Typography","withStyles","theme","tooltip","backgroundColor","typography","pxToRem","border","borderWidth","borderStyle","borderRadius","outline","transitionDuration","marginRight","margin","paddingBottom","flexFlow","flexWrap","GrammarInput","grammar","leftSide","rightSide","cont","input2","toUpperCase","maxLength","ArrowForward","id","buttonId","currentTarget","getAttribute","textarea","document","getElementById","Gramatica","grammarInputs","setGrammarInputs","strInput","str","arr","temp","replace","split","res","forEach","row","rule","push","i","filter","s","matchD","alert","matchE","nextRule","toLowerCase","rules","find","r","float","orientation","AutoFin","symbolType","nodes","setNodes","source","label","transitions","setTransitions","transitionInput","setTransitionInput","deleteMode","setDeleteMode","charCode","tempTransitions","tempNodes","tr","Object","assign","node","newValue","String","fromCharCode","initial","final","unshift","console","log","variant","parseInt","paddingLeft","t","data","links","config","nodeHighlightBehavior","linkHighlightBehavior","directed","maxZoom","size","highlightStrokeColor","labelPosition","link","highlightColor","renderLabel","onClickNode","nodeId","marginBottom","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wPAKe,SAASA,IAAQ,IAAD,EAEaC,mBAAS,MAFtB,mBAEpBC,EAFoB,KAENC,EAFM,KAU3B,OACI,eAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAOC,EAAOC,UAAvC,UACI,mBAAGF,MAAOC,EAAOE,KAAjB,uEARe,WACnB,GAAGP,EACC,OAAO,cAAC,IAAD,CAAUQ,GAAE,WAAMR,KASxBS,GACD,sBAAKL,MAAOC,EAAOK,KAAnB,UACI,cAAC,IAAD,CAAQN,MAAOC,EAAOM,OAAQC,QAAS,kBAAMX,EAAgB,UAA7D,qCACA,cAAC,IAAD,CAAQG,MAAOC,EAAOM,OAAQC,QAAS,kBAAMX,EAAgB,cAA7D,2BACA,cAAC,IAAD,CAAQG,MAAOC,EAAOM,OAAQC,QAAS,kBAAMX,EAAgB,YAA7D,qCAEJ,mBAAGG,MAAOC,EAAOE,KAAjB,2FAOZ,IAAMF,EAAS,CACXC,UAAW,CACPO,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,cAAe,UAEnBP,KAAM,CACFG,OAAQ,MACRK,MAAO,MACPJ,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZC,cAAe,UAEnBV,KAAM,CACFY,SAAU,OACVC,UAAW,UAEfT,OAAQ,CACJQ,SAAU,OACVE,UAAW,S,+GCzCJ,SAASC,IAAS,IAAD,EACMvB,mBAAS,IADf,mBACrBwB,EADqB,KACVC,EADU,OAEAzB,mBAAS,CAAC,IAFV,mBAErB0B,EAFqB,KAEbC,EAFa,KAItBC,EAAW,SAAAC,GACb,IAAMC,EAAQ,IAAIC,OAAOP,GACnBQ,EAASH,EAAEI,OAAOC,MAErBJ,EAAMK,KAAKH,GACTH,EAAEI,OAAO5B,MAAM+B,YAAc,cAE7BP,EAAEI,OAAO5B,MAAM+B,YAAc,aAItC,OACI,eAACjC,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAOC,EAAOC,UAAvC,UACI,yBAAQF,MAAOC,EAAO+B,OAAtB,UACI,cAAC,IAAD,CAAMhC,MAAOC,EAAOM,OAAQH,GAAG,IAAIU,MAAM,OAAOL,OAAO,OAAvD,SACI,cAACwB,EAAA,EAAD,CAASC,MAAM,SAAf,SAAwB,cAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAtB,SAA8B,cAAC,IAAD,CAAe4B,MAAM,iBAG/E,mBAAGnC,MAAOC,EAAOE,KAAjB,qCAGJ,qBAAKH,MAAOC,EAAOmC,KAAnB,SACI,uBAAOC,KAAK,OAAOC,SAAU,SAACd,GAAD,OAAOJ,EAAaI,EAAEI,OAAOC,QAAQ7B,MAAOC,EAAOsC,UAGpF,cAACC,EAAA,EAAD,CAASL,MAAM,UAAUnC,MAAO,CAAEyC,QAAS,QAAS3B,MAAO,MAAO4B,UAAW,YAE7E,qBAAK1C,MAAOC,EAAOmC,KAAnB,SACKf,EAAOsB,KAAI,kBACR,qBAAK3C,MAAOC,EAAO2C,KAAnB,SACI,uBAAOP,KAAK,OAAOQ,YAAY,SAASP,SAAU,SAACd,GAAD,OAAOD,EAASC,IAAIhB,QAAS,SAACgB,GAAOD,EAASC,GAAIA,EAAEI,OAAOiB,YAAc,IAAM7C,MAAOC,EAAOsC,eAK3J,sBAAKvC,MAAOC,EAAO6C,OAAnB,UACI,cAACb,EAAA,EAAD,CAASC,MAAM,YAAf,SACI,eAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAQC,QAAS,WAChCa,EAAO0B,OAAS,IACfzB,EAAU,GAAD,mBAAKD,GAAL,CAAa,MAF9B,cAGS,cAAC,IAAD,CAAiBc,MAAM,WAHhC,SAKJ,cAACF,EAAA,EAAD,CAASC,MAAM,UAAf,SACI,eAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAQC,QAAS,WAChCa,EAAO0B,OAAS,GACfzB,EAAUD,EAAO2B,MAAM,EAAG3B,EAAO0B,OAAO,KAFhD,cAGS,cAAC,IAAD,CAAoBZ,MAAM,WAHnC,YAOR,qBAAKnC,MAAOC,EAAOgD,OAAnB,SACI,cAACC,EAAD,CAAaC,UAAU,MACnBjB,MACA,eAAC,IAAMkB,SAAP,WACI,cAACC,EAAA,EAAD,CAAalB,MAAM,UAAnB,kCACC,iCAFL,IAEoC,uBAChC,4BAAI,QAHR,IAGoB,kCAHpB,IAGoD,uBAChD,4BAAI,QAJR,IAIoB,kCAJpB,IAIoD,uBAChD,4BAAI,QALR,IAKoB,iCALpB,IAKgD,uBAC5C,4BAAI,QANR,IAMoB,gCANpB,IAM+C,uBAC3C,4BAAI,QAPR,IAOoB,+BAPpB,IAO8C,uBAC1C,4BAAI,QARR,IAQoB,YARpB,IAQ8B,uBAC1B,4BAAI,UATR,IASsB,sBATtB,IASuC,uBACnC,4BAAI,aAVR,IAUyB,gCAVzB,IAUoD,uBAAK,uBACpD,qCAAqC,uBACrC,qDAdT,SAiBI,cAAC,IAAD,CAAiBA,MAAM,kBAO3C,IAAMe,EAAcI,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,gBAAiB,UACjBtB,MAAO,sBACPpC,SAAU,IACVgB,SAAUwC,EAAMG,WAAWC,QAAQ,IACnCC,OAAQ,wBANMN,CAQdrB,KAEAhC,EAAS,CACXC,UAAW,CACPO,OAAQ,QACRC,QAAS,OACTG,cAAe,SACfF,eAAgB,UAEpB4B,MAAO,CACHsB,YAAa,MACb9B,YAAa,QACb+B,YAAa,QACbC,aAAc,MACdtD,OAAQ,OACRK,MAAO,QACPkD,QAAS,IACTjD,SAAU,QAEdR,OAAQ,CACJwD,aAAc,MACdtD,OAAQ,OACRK,MAAO,OACPmD,mBAAoB,OACpBC,YAAa,QAEjB/D,KAAM,CACFY,SAAU,OACVC,UAAW,SACXmD,OAAQ,KAEZnC,OACA,CACIoC,cAAe,OACf1D,QAAS,OACTG,cAAe,SACfF,eAAgB,iBAEpByB,KAAM,CACFgC,cAAe,OACfD,OAAQ,SACRzD,QAAS,OACT2D,SAAU,MACVC,SAAU,OACV3D,eAAgB,UAEpBiC,KAAM,CACFH,QAAS,OAEbK,OAAQ,CACJpC,QAAS,OACTG,cAAe,MACfF,eAAgB,UAEpBsC,OAAQ,CACJvC,QAAS,OACTG,cAAe,MACfF,eAAgB,WAChBuD,YAAa,S,0CChJfK,EAAe,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,UAAYC,EAAU,EAAVA,KAAU,EAChChF,mBAAS,CAAC8E,EAAUC,IADY,mBACrDrD,EADqD,KAC7CC,EAD6C,KAG5D,OACI,sBAAKtB,MAAOC,EAAO2C,KAAnB,UACI,uBACIf,MAAOR,EAAO,GACdrB,MAAOC,EAAO2E,OACdtC,SAAU,SAAAd,GACNF,EAAU,CAAEE,EAAEI,OAAOC,MAAMgD,cAAexD,EAAO,KACjDmD,EAAQG,GAAMF,SAAWjD,EAAEI,OAAOC,MAAMgD,cACxCL,EAAQG,GAAMD,UAAYrD,EAAO,IAErCyD,UAAW,EACXjC,YAAY,QAGhB,cAACkC,EAAA,EAAD,CAAc5C,MAAM,WAEpB,uBACI6C,GAAIL,EACJ9C,MAAOR,EAAO,GACdrB,MAAOC,EAAOsC,MACdD,SAAU,SAAAd,GACNF,EAAU,CAAED,EAAO,GAAIG,EAAEI,OAAOC,QAChC2C,EAAQG,GAAMF,SAAWpD,EAAO,GAChCmD,EAAQG,GAAMD,UAAYlD,EAAEI,OAAOC,OAEvCgB,YAAY,QAIhB,cAACZ,EAAA,EAAD,CAASC,MAAM,oCAAf,SACI,cAAC,IAAD,CAAQ8C,GAAIL,EAAM3E,MAAOC,EAAOM,OAAQC,QAAS,SAACgB,GAC9C,IAAMyD,EAAWzD,EAAE0D,cAAcC,aAAa,MACxCC,EAAWC,SAASC,eAAeL,GAErCpD,EAAQuD,EAASvD,MACA,IAAjBA,EAAMkB,OACNqC,EAASvD,MAAQ,SAEjBuD,EAASvD,MAAQA,EAAQ,YAC7B2C,EAAQG,GAAMD,UAAYU,EAASvD,OATvC,SAUI,mBAAG7B,MAAO,CAACmC,MAAO,WAAlB,4BAML,SAASoD,IACpB,IAAIZ,EAAO,EADqB,EAGUhF,mBAAS,CAC/C,CAAE8E,SAAU,IAAKC,UAAW,gBAC5B,CAAED,SAAU,IAAKC,UAAW,iBALA,mBAGzBc,EAHyB,KAGVC,EAHU,OAOJ9F,mBAAS,CAAC,IAPN,mBAOzB0B,EAPyB,KAOjBC,EAPiB,KAS1BC,EAAW,SAAAmE,GACb,IAAMC,EAAMD,EAAS9D,OAAOC,MACtB+D,EAAMJ,EAAc7C,KAAI,SAAAJ,GAC1B,IAAMsD,EAAI,eAAQtD,GAElB,OADAsD,EAAKnB,UAAYmB,EAAKnB,UAAUoB,QAAQ,OAAQ,IAAIC,MAAM,KACnDF,KAELG,EAAM,GACR3D,EAAO,GAkCX,GAjCAuD,EAAIK,SAAQ,SAAAC,GACRA,EAAIxB,UAAUuB,SAAQ,SAAAE,GAClB,GAAGA,EAAKpD,OAAS,EAEb,GAAGoD,EAAKL,QAAQ,UAAW,IAAI/C,OAAS,EACpCiD,EAAII,KAAK,gBAET,IAAI,IAAIC,EAAE,EAAGA,EAAEF,EAAKpD,OAAQsD,IAAI,CAC5B,GAAGF,EAAKE,KAAOF,EAAKE,GAAGxB,eAAuB,IAANwB,EAAQ,CAC5CL,EAAII,KAAK,QACT,MAEJ,GAAGD,EAAKE,KAAOF,EAAKE,GAAGxB,eAAiBwB,IAAMF,EAAKpD,OAAS,EAAE,CAC1DiD,EAAII,KAAK,SACT,cAmBZ,WARR/D,EADD2D,EAAIM,QAAO,SAAAC,GAAC,MAAU,UAANA,KAAexD,SAAWiD,EAAIjD,OACtC,QACDiD,EAAIM,QAAO,SAAAC,GAAC,MAAU,SAANA,KAAcxD,SAAWiD,EAAIjD,OAC5C,OAEA,WAIS,qBAGA6C,EAAI,GAAGlB,WAHP,IAGhB,IAAI,EAAJ,qBACA,CAAC,IADOyB,EACR,QACI,GAAGK,EAAOb,EAAKQ,EAAMP,GAEjB,YADAF,EAAS9D,OAAO5B,MAAM+B,YAAc,gBAN5B,8BAUhB2D,EAAS9D,OAAO5B,MAAM+B,YAAc,gBACjC,IAAY,SAATM,EAcN,YADAoE,MAAM,kEAbgB,oBAGNb,EAAI,GAAGlB,WAHD,IAGtB,IAAI,EAAJ,qBACA,CAAC,IADOyB,EACR,QACI,GAAGO,EAAOf,EAAKQ,EAAMP,GAEjB,YADAF,EAAS9D,OAAO5B,MAAM+B,YAAc,gBANtB,8BAUtB2D,EAAS9D,OAAO5B,MAAM+B,YAAc,cAStCyE,EAAS,SAATA,EAAUb,EAAKQ,EAAMP,GAEvB,GAAGO,EAAKpD,OAAS,EAAI4C,EAAI5C,OAAQ,OAAO,EAExC,IAAM4D,EAAWR,EAAKA,EAAKpD,OAAS,GAIpC,GAAgB,WAAb4D,GAAqBR,EAAKnD,MAAM,EAAGmD,EAAKpD,OAAS,KAAO4C,GAAOQ,EAAKnD,MAAM,EAAGmD,EAAKpD,OAAS,GAAGA,SAAW4C,EAAI5C,OAAS,OAAO,EAEhI,GAAG4D,IAAaA,EAASC,cAAe,OAAOT,IAASR,EAGxD,GAAGQ,EAAKpD,OAAS,GAAKoD,EAAKnD,MAAM,EAAGmD,EAAKpD,OAAS,KAAO4C,EAAI3C,MAAM,EAAGmD,EAAKpD,OAAS,GAAI,OAAO,EAE/F,IAAM8D,EAAQjB,EAAIkB,MAAK,SAAAZ,GAAG,OAAIA,EAAIzB,WAAakC,KAG/C,IAAIE,EAAO,OAAO,EAlBa,oBAmBlBA,EAAMnC,WAnBY,IAmB/B,IAAI,EAAJ,qBACA,CAAC,IADOqC,EACR,QACI,GAAGP,EAAOb,EAAKQ,EAAKL,QAAQa,EAAUI,GAAInB,GACtC,OAAO,GAtBgB,gCA2B7Bc,EAAS,SAATA,EAAUf,EAAKQ,EAAMP,GAEvB,GAAGO,EAAKpD,OAAS,EAAI4C,EAAI5C,OAAQ,OAAO,EAExC,IAAM4D,EAAWR,EAAK,GAItB,GAAgB,WAAbQ,GAAqBR,EAAKnD,MAAM,EAAGmD,EAAKpD,UAAY4C,GAAOQ,EAAKnD,MAAM,EAAGmD,EAAKpD,QAAQA,SAAW4C,EAAI5C,OAAS,OAAO,EAExH,GAAG4D,IAAaA,EAASC,cAAe,OAAOT,IAASR,EAGxD,GAAGQ,EAAKpD,OAAS,GAAKoD,EAAKnD,MAAM,EAAGmD,EAAKpD,UAAY4C,EAAI3C,MAAM2C,EAAI5C,QAAUoD,EAAKpD,OAAO,GAAI4C,EAAI5C,QAAS,OAAO,EAEjH,IAAM8D,EAAQjB,EAAIkB,MAAK,SAAAZ,GAAG,OAAIA,EAAIzB,WAAakC,KAG/C,IAAIE,EAAO,OAAO,EAlBa,oBAmBlBA,EAAMnC,WAnBY,IAmB/B,IAAI,EAAJ,qBACA,CAAC,IADOqC,EACR,QACI,GAAGL,EAAOf,EAAKQ,EAAKL,QAAQa,EAAUI,GAAInB,GACtC,OAAO,GAtBgB,gCA2BnC,OACI,eAAC,IAAD,CAAW7F,SAAS,KAAKC,MAAOC,EAAOC,UAAvC,UACI,yBAAQF,MAAOC,EAAO+B,OAAtB,UACI,cAAC,IAAD,CAAMhC,MAAOC,EAAOM,OAAQH,GAAG,IAAIU,MAAM,OAAOL,OAAO,OAAvD,SACI,cAACwB,EAAA,EAAD,CAASC,MAAM,SAAf,SAAwB,cAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAtB,SAA8B,cAAC,IAAD,CAAe4B,MAAM,iBAG/E,mBAAGnC,MAAOC,EAAOE,KAAjB,qCAGJ,sBAAKH,MAAO,CAACc,MAAO,QAApB,UACI,sBAAKd,MAAO,CAACc,MAAO,MAAOkG,MAAO,QAAlC,UACI,qBAAKhH,MAAOC,EAAOmC,KAAnB,SACKoD,EAAc7C,KAAI,SAAAJ,GAAK,OACpB,cAAC,EAAD,CAAciC,QAASgB,EAAef,SAAUlC,EAAMkC,SAAUC,UAAWnC,EAAMmC,UAAWC,KAAMA,WAG1G,sBAAK3E,MAAOC,EAAO6C,OAAnB,UACI,cAACb,EAAA,EAAD,CAASC,MAAM,kBAAf,SACI,eAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAQC,QAAS,WAChCgF,EAAczC,OAAS,IACtB0C,EAAiB,GAAD,mBAAMD,GAAN,CAAqB,CAAEf,SAAU,GAAIC,UAAW,QAFxE,cAIM,cAAC,IAAD,CAAiBvC,MAAM,WAJ7B,SAMJ,cAACF,EAAA,EAAD,CAASC,MAAM,gBAAf,SACI,eAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAQC,QAAS,WAChCgF,EAAczC,OAAS,GACtB0C,EAAiBD,EAAcxC,MAAM,EAAGwC,EAAczC,OAAO,KAFrE,cAGS,cAAC,IAAD,CAAoBZ,MAAM,WAHnC,eAQZ,cAACK,EAAA,EAAD,CAASL,MAAM,UAAU8E,YAAY,WAAWjH,MAAO,CAAEyC,QAAS,QAAShC,OAAQ,OAAQuG,MAAO,UAElG,sBAAKhH,MAAO,CAACc,MAAO,MAAOkG,MAAO,QAAlC,UACI,qBAAKhH,MAAOC,EAAOmC,KAAnB,SACKf,EAAOsB,KAAI,kBACR,qBAAK3C,MAAOC,EAAO2C,KAAnB,SACI,uBAAOP,KAAK,OAAOQ,YAAY,SAASP,SAAU,SAACoD,GAAD,OAAcnE,EAASmE,IAAWlF,QAAS,SAACkF,GAAcnE,EAASmE,GAAWA,EAAS9D,OAAOiB,YAAc,IAAM7C,MAAOC,EAAOsC,eAI9L,sBAAKvC,MAAOC,EAAO6C,OAAnB,UACI,cAACb,EAAA,EAAD,CAASC,MAAM,YAAf,SACI,eAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAQC,QAAS,WAChCa,EAAO0B,OAAS,IACfzB,EAAU,GAAD,mBAAKD,GAAL,CAAa,MAF9B,cAGS,cAAC,IAAD,CAAiBc,MAAM,WAHhC,SAKJ,cAACF,EAAA,EAAD,CAASC,MAAM,UAAf,SACI,eAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAQC,QAAS,WAChCa,EAAO0B,OAAS,GACfzB,EAAUD,EAAO2B,MAAM,EAAG3B,EAAO0B,OAAO,KAFhD,cAGS,cAAC,IAAD,CAAoBZ,MAAM,WAHnC,kBAShB,qBAAKnC,MAAOC,EAAOgD,OAAnB,SACI,cAAC,EAAD,CAAaE,UAAU,MACnBjB,MACA,eAAC,IAAMkB,SAAP,WACI,cAACC,EAAA,EAAD,CAAalB,MAAM,UAAnB,kCACC,oCAFL,IAEuC,uBACnC,4BAAI,WAHR,IAGuB,MAHvB,IAG8B,4BAAI,OAHlC,IAG6C,MAH7C,IAGoD,4BAAI,YAHxD,IAGkE,uBAAK,uBACnE,4BAAI,mBAAe,uBAJvB,IAI8B,kDAC1B,uBALJ,IAKW,sEALX,IAKyE,uBACrE,uBAAM,kDANV,IAM6D,uBACxD,qDATT,SAYI,cAAC,IAAD,CAAiBA,MAAM,kBAO3C,IAAMe,EAAcI,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,gBAAiB,UACjBtB,MAAO,sBACPpC,SAAU,IACVgB,SAAUwC,EAAMG,WAAWC,QAAQ,IACnCC,OAAQ,wBANMN,CAQdrB,KAEAhC,EAAS,CACXC,UAAW,CACPO,OAAQ,QACRC,QAAS,OACTG,cAAe,SACfF,eAAgB,UAEpBsC,OAAQ,CACJvC,QAAS,OACTG,cAAe,MACfF,eAAgB,WAChBuD,YAAa,QAEjB3D,OAAQ,CACJwD,aAAc,MACdtD,OAAQ,OACRK,MAAO,OACPmD,mBAAoB,OACpBC,YAAa,QAEjBlC,OACA,CACIoC,cAAe,OACf1D,QAAS,OACTG,cAAe,SACfF,eAAgB,iBAEpBR,KAAM,CACFY,SAAU,OACVC,UAAW,SACXmD,OAAQ,KAEZrB,OAAQ,CACJpC,QAAS,OACTG,cAAe,MACfF,eAAgB,UAEpByB,KAAM,CACFgC,cAAe,OACfD,OAAQ,SACRzD,QAAS,OACT2D,SAAU,MACVC,SAAU,OACV3D,eAAgB,UAEpBiC,KAAM,CACFH,QAAS,OAEbF,MAAO,CACHsB,YAAa,MACb9B,YAAa,QACb+B,YAAa,QACbC,aAAc,MACdtD,OAAQ,OACRK,MAAO,QACPkD,QAAS,IACTjD,SAAU,QAEb6D,OAAQ,CACJf,YAAa,MACb9B,YAAa,QACb+B,YAAa,QACbC,aAAc,MACdtD,OAAQ,OACRK,MAAO,QACPkD,QAAS,IACTjD,SAAU,S,6CCpVJ,SAASmG,IAAW,IAAD,EAEJvH,mBAAS,CAC/B,CAAEqF,GAAI,KAAMmC,WAAY,WACxB,CAAEnC,GAAI,KAAM7C,MAAO,OACnB,CAAE6C,GAAI,KAAM7C,MAAO,SALO,mBAEvBiF,EAFuB,KAEhBC,EAFgB,OAOQ1H,mBAAS,CAC3C,CAAE2H,OAAQ,KAAM1F,OAAQ,KAAM2F,MAAO,KACrC,CAAED,OAAQ,KAAM1F,OAAQ,KAAM2F,MAAO,OATX,mBAOvBC,EAPuB,KAOVC,EAPU,OAWgB9H,mBAAS,CAAE2H,OAAQ,GAAI1F,OAAQ,GAAI2F,MAAO,WAX1D,mBAWvBG,EAXuB,KAWNC,EAXM,OAYMhI,oBAAS,GAZf,mBAYvBiI,EAZuB,KAYXC,EAZW,OAaFlI,mBAAS,CAAC,IAbR,mBAavB0B,EAbuB,KAafC,EAbe,KAgDxBC,EAAW,SAAAmE,GACb,IAAIoC,EAAW,GACTnC,EAAMD,EAAS9D,OAAOC,MACxBkG,EAAkB,GAClBC,EAAY,GAChBR,EAAYvB,SAAQ,SAAAgC,GAAE,OAAIF,EAAgB3B,KAAK8B,OAAOC,OAAO,GAAIF,OACjEb,EAAMnB,SAAQ,SAAAmC,GAAI,OAAIJ,EAAU5B,KAAK8B,OAAOC,OAAO,GAAIC,OAGvDJ,EAAYA,EAAUrF,KAAI,SAAAyF,GACtB,IAAMC,EAAWC,OAAOC,aAAaT,GACrCC,EAAgBpF,KAAI,SAAAsF,GACbA,EAAGX,SAAWc,EAAKpD,KAAIiD,EAAGX,OAASe,GACnCJ,EAAGrG,SAAWwG,EAAKpD,KAAIiD,EAAGrG,OAASyG,MAE1CD,EAAKpD,GAAKqD,EACV,IAAIhG,EAAO,GAKX,MAJuB,YAApB+F,EAAKjB,YAA0B9E,EAAK+D,KAAK,WAC1B,QAAfgC,EAAKjG,OAAiBE,EAAK+D,KAAK,SACnCgC,EAAK/F,KAAOA,EACZyF,GAAY,EACLM,KAKX,IADA,IAAI5D,EAAU,GAzBW,WA0BjB6B,GACJ,IAAImC,EAAUT,EAAgB1B,GAAGiB,OAC7BmB,EAAQV,EAAgB1B,GAAGzE,OAC3BC,EAAQkG,EAAgB1B,GAAGkB,MAE3BV,EAAQrC,EAAQsC,MAAK,SAAAZ,GAAG,OAAIA,EAAIzB,WAAa+D,KAE7C3B,EAKa,WAAVhF,EAAegF,EAAMnC,UAAU0B,KAAKqC,GAClC5B,EAAMnC,UAAU0B,KAAKvE,EAAQ4G,GALrB,WAAV5G,EAAe2C,EAAQ4B,KAAK,CAAC3B,SAAU+D,EAAS9D,UAAW,CAAC+D,KAC1DjE,EAAQ4B,KAAK,CAAC3B,SAAU+D,EAAS9D,UAAW,CAAC7C,EAAQ4G,MAT1DpC,EAAE,EAAIA,EAAI0B,EAAgBhF,OAASsD,IAAK,EAAxCA,GAgBR,IA1CyB,eA0CjBA,GACJ,IAAImC,EAAUR,EAAU3B,GAAGrB,GAE3B,GADWgD,EAAU3B,GAAGhE,KAAKyE,MAAK,SAAAZ,GAAG,MAAY,UAARA,KACjC,CACJ,IAAIW,EAAQrC,EAAQsC,MAAK,SAAAZ,GAAG,OAAIA,EAAIzB,WAAa+D,KAE7C3B,EAGAA,EAAMnC,UAAU0B,KAAK,UAFrB5B,EAAQ4B,KAAK,CAAC3B,SAAU+D,EAAS9D,UAAW,CAAC,cAPjD2B,EAAE,EAAIA,EAAI2B,EAAUjF,OAASsD,IAAK,EAAlCA,GAYR,IAtDyB,eAsDjBA,GACJ,IAAImC,EAAUR,EAAU3B,GAAGrB,GAG3B,GAFWgD,EAAU3B,GAAGhE,KAAKyE,MAAK,SAAAZ,GAAG,MAAY,YAARA,KAEjC,CACJ,IAAIW,EAAQrC,EAAQsC,MAAK,SAAAZ,GAAG,OAAIA,EAAIzB,WAAa+D,MACjDhE,EAAUA,EAAQ8B,QAAO,SAAA1D,GAAI,OAAIA,IAASiE,MAClC6B,QAAQ7B,KAPhBR,EAAE,EAAIA,EAAE2B,EAAUjF,OAASsD,IAAK,EAAhCA,GAURsC,QAAQC,IAAIpB,GACZmB,QAAQC,IAAIpE,GAjEa,oBAkETA,EAAQ,GAAGE,WAlEF,IAkEzB,IAAI,EAAJ,qBAAqC,CAAC,IAA9ByB,EAA6B,QACjC,GAAGK,EAAOb,EAAKQ,EAAM3B,GAEjB,YADAkB,EAAS9D,OAAO5B,MAAM+B,YAAc,gBApEnB,8BAwEzB2D,EAAS9D,OAAO5B,MAAM+B,YAAc,aAGlCyE,EAAS,SAATA,EAAUb,EAAKQ,EAAMP,GACvB,GAAGO,EAAKpD,OAAS,EAAI4C,EAAI5C,OAAQ,OAAO,EAExC,IAAM4D,EAAWR,EAAKA,EAAKpD,OAAS,GAGpC,GAAgB,WAAb4D,GAAqBR,EAAKnD,MAAM,EAAGmD,EAAKpD,OAAS,KAAO4C,GAAOQ,EAAKnD,MAAM,EAAGmD,EAAKpD,OAAS,GAAGA,SAAW4C,EAAI5C,OAAS,OAAO,EAEhI,GAAG4D,IAAaA,EAASC,cAAe,OAAOT,IAASR,EAExD,IAAMkB,EAAQjB,EAAIkB,MAAK,SAAAZ,GAAG,OAAIA,EAAIzB,WAAakC,KAE/C,IAAIE,EAAO,OAAO,EAZa,oBAalBA,EAAMnC,WAbY,IAa/B,IAAI,EAAJ,qBACA,CAAC,IADOqC,EACR,QACI,GAAGP,EAAOb,EAAKQ,EAAKL,QAAQa,EAAUI,GAAInB,GACtC,OAAO,GAhBgB,gCAqBnC,OACI,eAAC,IAAD,CAAW7F,SAAS,KAAKC,MAAOC,EAAOC,UAAvC,UACI,yBAAQF,MAAOC,EAAO+B,OAAtB,UACA,cAAC,IAAD,CAAMhC,MAAOC,EAAOM,OAAQH,GAAG,IAAIU,MAAM,OAAOL,OAAO,OAAvD,SACI,cAACwB,EAAA,EAAD,CAASC,MAAM,SAAf,SAAwB,cAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAtB,SAA8B,cAAC,IAAD,CAAe4B,MAAM,iBAG/E,mBAAGnC,MAAOC,EAAOE,KAAjB,mCAEA,cAAC,IAAD,CAASgC,MAAM,UAAUnC,MAAO,CAAEyC,QAAS,QAAS3B,MAAO,MAAO4B,UAAW,YAE7E,sBAAK1C,MAAO,CAAES,OAAQ,MAAOC,QAAS,OAAQC,eAAgB,gBAAiB8B,QAAS,gBAAiB7B,WAAY,UAArH,UAEI,8BACI,cAAC,IAAD,CACIiI,QAAQ,YACR1G,MAAM,UACN3B,QAAS,WACF4G,EAAMrE,OAAS,EAAGsE,EAAS,GAAD,mBAAMD,GAAN,CAAa,CAAEpC,GAAG,IAAD,OAAM8D,SAAS1B,EAAMA,EAAMrE,OAAS,GAAGiC,GAAG,IAAM,OACzFqC,EAAS,CAAC,CAAErC,GAAI,KAAMmC,WAAY,cAL/C,gCASJ,sBAAKnH,MAAO,CAAEU,QAAS,OAAQD,OAAQ,OAAvC,UACI,sBAAKT,MAAO,CAAEU,QAAS,OAAQG,cAAe,SAAUF,eAAgB,iBAAxE,UACI,uBACIkC,YAAa,iBACb7C,MAAOC,EAAOsC,MACdV,MAAO6F,EAAgBJ,OACvBhF,SAAU,SAAAd,GAAC,OAAImG,EAAmB,2BAAKD,GAAN,IAAuBJ,OAAQ9F,EAAEI,OAAOC,YAE7E,uBACIgB,YAAa,eACb7C,MAAOC,EAAOsC,MACdV,MAAO6F,EAAgB9F,OACvBU,SAAU,SAAAd,GAAC,OAAImG,EAAmB,2BAAKD,GAAN,IAAuB9F,OAAQJ,EAAEI,OAAOC,YAE7E,uBACIgB,YAAa,UACb7C,MAAOC,EAAOsC,MACdV,MAAO6F,EAAgBH,MACvBjF,SAAU,SAAAd,GAAC,OAAImG,EAAmB,2BAAKD,GAAN,IAAuBH,MAAO/F,EAAEI,OAAOC,eAGhF,qBAAK7B,MAAO,CAAE+I,YAAa,OAAQrI,QAAS,OAAQE,WAAY,UAAhE,SACI,cAAC,IAAD,CACIiI,QAAQ,YACR1G,MAAM,UACN3B,QAAS,WACMgH,EAAYV,MAAK,SAAAkC,GAAC,OAAIA,EAAE1B,SAAWI,EAAgBJ,QAAU0B,EAAEpH,SAAW8F,EAAgB9F,QAAUoH,EAAEzB,QAAUG,EAAgBH,UACnIE,EAAe,GAAD,mBAAMD,GAAN,CAAmBE,KACzCC,EAAmB,CAAEL,OAAQ,GAAI1F,OAAQ,GAAI2F,MAAO,YAN5D,4CAWR,8BACI,cAAC,IAAD,CACIsB,QAAQ,YACR1G,MAAOyF,EAAa,YAAc,UAClCpH,QAAS,kBAAMqH,GAAeD,IAHlC,SAKI,cAAC,IAAD,WAIZ,cAAC,IAAD,CAASzF,MAAM,UAAUnC,MAAO,CAAEyC,QAAS,QAAS3B,MAAO,MAAO4B,UAAW,YAC7E,sBAAK1C,MAAO,CAAES,OAAQ,MAAOK,MAAO,OAAQJ,QAAS,OAAQE,WAAY,SAAUD,eAAgB,UAAnG,UACI,qBAAKX,MAAO,CAAEc,MAAO,MAAOL,OAAQ,OAAQC,QAAS,OAAQE,WAAY,UAAzE,SACI,sBAAKZ,MAAO,CAACc,MAAO,OAAQkG,MAAO,QAAnC,UACI,8BACK3F,EAAOsB,KAAI,kBACR,8BACI,uBAAON,KAAK,OAAOQ,YAAY,SAASP,SAAU,SAACoD,GAAD,OAAcnE,EAASmE,IAAWlF,QAAS,SAACkF,GAAcnE,EAASmE,GAAWA,EAAS9D,OAAOiB,YAAc,IAAM7C,MAAOC,EAAOsC,eAI9L,sBAAKvC,MAAOC,EAAO6C,OAAnB,UACI,cAACb,EAAA,EAAD,CAASC,MAAM,YAAf,SACI,eAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAQC,QAAS,WAChCa,EAAO0B,OAAS,GACfzB,EAAU,GAAD,mBAAKD,GAAL,CAAa,MAF9B,cAGS,cAAC,IAAD,CAAiBc,MAAM,WAHhC,SAKJ,cAACF,EAAA,EAAD,CAASC,MAAM,UAAf,SACI,eAAC,IAAD,CAAQlC,MAAOC,EAAOM,OAAQC,QAAS,WAChCa,EAAO0B,OAAS,GACfzB,EAAUD,EAAO2B,MAAM,EAAG3B,EAAO0B,OAAO,KAFhD,cAGS,cAAC,IAAD,CAAoBZ,MAAM,WAHnC,iBAQhB,cAAC,QAAD,CACI6C,GAAG,WACHiE,KAAM,CACF7B,MAAOA,EACP8B,MAAO1B,GAEX2B,OApOC,CACbC,uBAAuB,EACvBC,uBAAuB,EACvBC,UAAU,EACVC,QAAS,EACTzI,MAAO,IACPsH,KAAM,CACJjG,MAAO,QACPqH,KAAM,IACNC,qBAAsB,OACtBC,cAAe,OAEjBC,KAAM,CACJC,eAAgB,YAChBC,aAAa,IAuNHC,YAnNI,SAAAC,GACbnC,GACCH,EAAeD,EAAYlB,QAAO,SAAA0C,GAAC,OAAIA,EAAE1B,SAAWyC,GAAUf,EAAEpH,SAAWmI,MAC3E1C,EAASD,EAAMd,QAAO,SAAA8B,GAAI,OAAIA,EAAKpD,KAAO+E,OAE1C1C,EAASD,EAAMzE,KAAI,SAAAyF,GAKf,OAJGA,EAAKpD,KAAO+E,IACO,QAAf3B,EAAKjG,MAAiBiG,EAAKjG,MAAQ,QACjCiG,EAAKjG,MAAQ,OAEfiG,YA4MX,qBAAKpI,MAAOC,EAAOgD,OAAnB,SACI,cAAC,EAAD,CAAaE,UAAU,MACnBjB,MACA,eAAC,IAAMkB,SAAP,WACI,cAACC,EAAA,EAAD,CAAalB,MAAM,UAAnB,iCACA,8BAAI,gBAAJ,OAA0B,gBAF9B,IAE+C,uBAC3C,8BAAI,mBAAJ,OAA6B,eAHjC,IAGiD,uBAC7C,8BAAI,WAAJ,OAAqB,iBAJzB,IAI2C,uBACvC,uBALJ,IAKW,gDALX,IAKyD,uBACrD,uBAAM,kDANV,IAM6D,uBACxD,qDATT,SAYI,cAAC,IAAD,CAAiBA,MAAM,kBAO3C,IAAMe,EAAcI,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,gBAAiB,UACjBtB,MAAO,sBACPpC,SAAU,IACVgB,SAAUwC,EAAMG,WAAWC,QAAQ,IACnCC,OAAQ,wBANMN,CAQdrB,KAEAhC,EAAS,CACXsC,MAAO,CACHsB,YAAa,MACb9B,YAAa,QACb+B,YAAa,QACbC,aAAc,MACdtD,OAAQ,OACRK,MAAO,QACPkD,QAAS,IACTjD,SAAU,OACViJ,aAAc,QAElB/G,OAAQ,CACJvC,QAAS,OACTG,cAAe,MACfF,eAAgB,WAChBuD,YAAa,QAEjBpB,OAAQ,CACJpC,QAAS,OACTG,cAAe,MACfF,eAAgB,UAEpBT,UAAW,CACPO,OAAQ,QACRC,QAAS,OACTG,cAAe,SACfF,eAAgB,UAEpBJ,OAAQ,CACJwD,aAAc,MACdtD,OAAQ,OACRK,MAAO,OACPmD,mBAAoB,OACpBC,YAAa,QAEjBlC,OAAQ,CACJoC,cAAe,OACf1D,QAAS,OACTG,cAAe,SACfF,eAAgB,iBAEpBR,KAAM,CACFY,SAAU,OACVC,UAAW,SACXmD,OAAQ,MC9TD8F,MAbf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1K,IACjC,cAAC,IAAD,CAAOyK,KAAK,aAAaC,UAAW7E,IACpC,cAAC,IAAD,CAAO4E,KAAK,SAASC,UAAWlJ,IAChC,cAAC,IAAD,CAAOiJ,KAAK,WAAWC,UAAWlD,UCF3BmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3F,SAASC,eAAe,SAM1B+E,M","file":"static/js/main.eb1c35da.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from '@material-ui/core/Button/Button';\nimport Container from '@material-ui/core/Container';\n\nexport default function Home() {\n\n    const [redirectFlag, setRedirectFlag] = useState(null);\n\n    const renderRedirect = () => {\n        if(redirectFlag){\n            return <Redirect to={`/${redirectFlag}`} />\n        }\n    }\n\n    return (\n        <Container maxWidth='sm' style={styles.container}>\n            <p style={styles.text}>\n                Trabalho: Linguagens Formais e Teoria da Computação \n            </p>\n            {renderRedirect()}\n            <div style={styles.menu}>\n                <Button style={styles.button} onClick={() => setRedirectFlag('regex')}>Expressões regulares</Button>\n                <Button style={styles.button} onClick={() => setRedirectFlag('gramatica')}>Gramáticas</Button>\n                <Button style={styles.button} onClick={() => setRedirectFlag('autofin')}>Autômatos finitos</Button>\n            </div>\n            <p style={styles.text}>\n                Desenvolvido por: Giovanna Carreira Marinho e Guilherme Molina de Olyveira\n            </p>\n        </Container>\n    )\n}\n\nconst styles = {\n    container: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    menu: {\n        height: '70%',\n        width: '50%',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    text: {\n        fontSize: '15px',\n        textAlign: 'center'\n    },\n    button: {\n        fontSize: '20px',\n        fontStyle: 'none'\n    }\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button/Button';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nexport default function Regex() {\n    const [userInput, setUserInput] = useState('');\n    const [inputs, setInputs] = useState([1]);\n\n    const validate = e => {\n        const regex = new RegExp(userInput);\n        const string = e.target.value;        \n                \n        if(regex.exec(string)){\n             e.target.style.borderColor = \"ForestGreen\";\n        } else {\n             e.target.style.borderColor = \"FireBrick\";\n        }\n    }\n\n    return (\n        <Container maxWidth='sm' style={styles.container}>\n            <header style={styles.header}>\n                <Link style={styles.button} to=\"/\" width=\"20px\" height=\"40px\">\n                    <Tooltip title=\"Voltar\"><Button style={styles.button}><ArrowBackIcon color=\"action\"/></Button></Tooltip>\n                </Link>\n                \n                <p style={styles.text}>Expressão regular</p>\n            </header>\n\n            <div style={styles.main}>\n                <input type=\"text\" onChange={(e) => setUserInput(e.target.value)} style={styles.input}/>\n            </div>\n\n            <Divider color=\"inherit\" style={{ padding: '0.5px', width: '95%', alignSelf: 'center' }} />\n\n            <div style={styles.main}>\n                {inputs.map(() => (\n                    <div style={styles.item}>\n                        <input type=\"text\" placeholder=\"String\" onChange={(e) => validate(e)} onClick={(e) => {validate(e); e.target.placeholder = \"\";}} style={styles.input}/>\n                    </div>\n                ))}\n            </div>\n\n            <div style={styles.footer}>\n                <Tooltip title=\"Adicionar\">\n                    <Button style={styles.button} onClick={() => {\n                        if(inputs.length < 10)\n                            setInputs([...inputs, 1])\n                        }} > <AddOutlinedIcon color=\"action\"/> </Button >\n                </Tooltip>\n                <Tooltip title=\"Remover\">\n                    <Button style={styles.button} onClick={() => {\n                        if(inputs.length > 1)\n                            setInputs(inputs.slice(0, inputs.length-1))\n                        }} > <RemoveOutlinedIcon color=\"action\" /> </Button >\n                </Tooltip>\n            </div>\n\n            <div style={styles.helper}>            \n                <HtmlTooltip placement=\"top\"\n                    title={\n                    <React.Fragment>\n                        <Typography  color=\"inherit\">Expressão regular</Typography>\n                        {'Insira a expressão regular:'} <br/>\n                        <b>{'  ^'}</b> {' iniciar a expressão regular'} <br/>\n                        <b>{'  $'}</b> {' termina a expressão regular'} <br/>\n                        <b>{'  *'}</b> {' zero ou mais repetições'} <br/>\n                        <b>{'  +'}</b> {' uma ou mais repetições'} <br/>\n                        <b>{'  ?'}</b> {' zero ou uma repetição'} <br/>\n                        <b>{'  |'}</b> {' união'} <br/>\n                        <b>{'  {x}'}</b> {' x repetições'} <br/>\n                        <b>{'  {x, y}'}</b> {' entre x e y repetições'} <br/><br/>\n                        {'Acrescente as strings para testar.'}<br/>\n                        {'Elas serão validadas quando são clicadas.'}                           \n                    </React.Fragment>\n                    }>\n                    <HelpOutlineIcon color=\"action\" />\n                </HtmlTooltip>\n            </div>    \n        </Container>\n    )\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 420,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }))(Tooltip);\n\nconst styles = {\n    container: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    input: {\n        borderWidth: \"3px\", \n        borderColor: \"black\",\n        borderStyle: \"solid\",\n        borderRadius: \"5px\",\n        height: \"50px\",\n        width: \"250px\",\n        outline: \"0\",\n        fontSize: \"20px\"\n    },\n    button: {\n        borderRadius: '5px',\n        height: '30px',\n        width: '20px',\n        transitionDuration: '0.5s',\n        marginRight: '10px'\n    },\n    text: {\n        fontSize: '30px',\n        textAlign: 'center',\n        margin: '0'\n    },\n    header:\n    {\n        paddingBottom: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    main: {\n        paddingBottom: '20px',\n        margin: '0 auto',\n        display: 'flex',\n        flexFlow: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    item: {\n        padding: '5px',\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    helper: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        marginRight: '10px'\n    }\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container/Container';\nimport Button from '@material-ui/core/Button/Button';\nimport { ArrowForward } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nconst GrammarInput = ({grammar, leftSide, rightSide , cont}) => {\n    const [inputs, setInputs] = useState([leftSide, rightSide]);\n    \n    return (\n        <div style={styles.item}>\n            <input \n                value={inputs[0]}\n                style={styles.input2}\n                onChange={e => {\n                    setInputs([ e.target.value.toUpperCase(), inputs[1] ]);\n                    grammar[cont].leftSide = e.target.value.toUpperCase();\n                    grammar[cont].rightSide = inputs[1];\n                }}\n                maxLength={1}\n                placeholder=\"LHS\"\n            />\n\n            <ArrowForward color=\"action\"/>\n\n            <input \n                id={cont}\n                value={inputs[1]}\n                style={styles.input}\n                onChange={e => {\n                    setInputs([ inputs[0], e.target.value ]);\n                    grammar[cont].leftSide = inputs[0];\n                    grammar[cont].rightSide = e.target.value;\n                }}\n                placeholder=\"RHS\"\n            />\n\n\n            <Tooltip title=\"Adicionar caractere vazio: λ\">\n                <Button id={cont} style={styles.button} onClick={(e) => {\n                    const buttonId = e.currentTarget.getAttribute('id');\n                    const textarea = document.getElementById(buttonId);\n                    \n                    let value = textarea.value;\n                    if (value.length === 0)\n                        textarea.value = 'λ';\n                    else\n                        textarea.value = value + ' | λ';\n                    grammar[cont].rightSide = textarea.value;\n                }} ><p style={{color: '#757575'}}>λ</p></Button >\n            </Tooltip>\n        </div>\n    )\n}\n\nexport default function Gramatica() {\n    let cont = 0;\n    \n    const [grammarInputs, setGrammarInputs] = useState([\n        { leftSide: 'S', rightSide: 'aS | abB | B' },\n        { leftSide: 'B', rightSide: 'cB | λ' }\n    ]);\n    const [inputs, setInputs] = useState([1]);\n\n    const validate = strInput => {\n        const str = strInput.target.value;   \n        const arr = grammarInputs.map(input => {\n            const temp = { ...input };\n            temp.rightSide = temp.rightSide.replace(/\\s+/g, '').split('|');\n            return temp;\n        });\n        const res = [];\n        let type = '';\n        arr.forEach(row => {\n            row.rightSide.forEach(rule => {\n                if(rule.length > 1)\n                {\n                    if(rule.replace(/[^A-Z]/g, '').length > 1){\n                        res.push('Invalid');\n                    } else {\n                        for(let i=0; i<rule.length; i++){\n                            if(rule[i] === rule[i].toUpperCase() && i === 0){\n                                res.push('Left');\n                                break;\n                            }\n                            if(rule[i] === rule[i].toUpperCase() && i === rule.length - 1){\n                                res.push('Right');\n                                break;\n                            }\n                        }\n                    }\n                }\n            })\n        });\n\n        //console.log(res);\n        \n        if(res.filter(s => s === 'Right').length === res.length){\n            type = 'Right';\n        } else if(res.filter(s => s === 'Left').length === res.length){\n            type = 'Left';\n        } else {\n            type = 'Invalid';\n        };\n        //console.log('String: ', str);\n        \n        if(type === 'Right'){\n            //console.log('Grammar type: ', type);\n            \n            for(let rule of arr[0].rightSide)\n            {\n                if(matchD(str, rule, arr)){\n                    strInput.target.style.borderColor = \"ForestGreen\";\n                    return;\n                };\n            }\n            strInput.target.style.borderColor = \"FireBrick\";\n        } else if(type === 'Left'){\n            //console.log('Grammar type: ', type);\n            \n            for(let rule of arr[0].rightSide)\n            {\n                if(matchE(str, rule, arr)){\n                    strInput.target.style.borderColor = \"ForestGreen\";\n                    return;\n                };\n            }\n            strInput.target.style.borderColor = \"FireBrick\";\n        } else {\n            //console.log('Error: Invalid Grammar type! Accepted grammars: GLD, GLUD, GLE, GLUE.');\n            alert(\"Gramática inválida! Aceita apenas GLD, GLUD, GLE e GLUE!\");\n            return;\n        }\n        return;\n    };\n\n    const matchD = (str, rule, arr) => {\n        //console.log('Rule: ', rule);\n        if(rule.length - 1 > str.length) return false;\n\n        const nextRule = rule[rule.length - 1];\n        //console.log('  Next rule: ', nextRule);\n\n        //Verificando caractere vazio\n        if(nextRule === 'λ' && (rule.slice(0, rule.length - 1) === str && rule.slice(0, rule.length - 1).length === str.length)) return true;\n        \n        if(nextRule === nextRule.toLowerCase()) return rule === str;\n        \n        //Verificando se pode continuar: só vai continuar se aB, ababaA = a, ababa. Quando for B, deve seguir para ver as outras regras dele\n        if(rule.length > 1 && rule.slice(0, rule.length - 1) !== str.slice(0, rule.length - 1)) return false;\n\n        const rules = arr.find(row => row.leftSide === nextRule);\n        //console.log('  Rules: ', rules.rightSide);\n\n        if(!rules) return false;\n        for(let r of rules.rightSide)\n        {\n            if(matchD(str, rule.replace(nextRule, r), arr)){\n                return true;\n            }\n        }\n    };\n\n    const matchE = (str, rule, arr) => {\n        //console.log('Rule: ', rule);\n        if(rule.length - 1 > str.length) return false;\n\n        const nextRule = rule[0];\n        //console.log('  NextRule: ', nextRule);\n\n        //Verificando caractere vazio\n        if(nextRule === 'λ' && (rule.slice(1, rule.length) === str && rule.slice(1, rule.length).length === str.length)) return true;\n        \n        if(nextRule === nextRule.toLowerCase()) return rule === str;\n\n        //Verificando se pode continuar: só vai continuar se aB, ababaA = a, ababa. Quando for B, deve seguir para ver as outras regras dele\n        if(rule.length > 1 && rule.slice(1, rule.length) !== str.slice(str.length - (rule.length-1), str.length)) return false;\n        \n        const rules = arr.find(row => row.leftSide === nextRule);\n        //console.log('  Rules: ', rules.rightSide);\n\n        if(!rules) return false;\n        for(let r of rules.rightSide)\n        {\n            if(matchE(str, rule.replace(nextRule, r), arr)){\n                return true;\n            }\n        }\n    }\n  \n    return (\n        <Container maxWidth='lg' style={styles.container}>\n            <header style={styles.header}>\n                <Link style={styles.button} to=\"/\" width=\"20px\" height=\"40px\">\n                    <Tooltip title=\"Voltar\"><Button style={styles.button}><ArrowBackIcon color=\"action\"/></Button></Tooltip>\n                </Link>\n                \n                <p style={styles.text}>Gramática regular</p>\n            </header>\n\n            <div style={{width: '100%' }}>\n                <div style={{width: '50%', float: 'left' }}>\n                    <div style={styles.main}>\n                        {grammarInputs.map(input => (\n                            <GrammarInput grammar={grammarInputs} leftSide={input.leftSide} rightSide={input.rightSide} cont={cont++}/>\n                        ))}\n                    </div>   \n                    <div style={styles.footer}>\n                        <Tooltip title=\"Adicionar regra\">\n                            <Button style={styles.button} onClick={() => {\n                                if(grammarInputs.length < 20)\n                                    setGrammarInputs([ ...grammarInputs, { leftSide: '', rightSide: '' } ]);\n                                }}\n                                > <AddOutlinedIcon color=\"action\"/> </Button >\n                        </Tooltip>\n                        <Tooltip title=\"Remover regra\">\n                            <Button style={styles.button} onClick={() => {\n                                if(grammarInputs.length > 1)\n                                    setGrammarInputs(grammarInputs.slice(0, grammarInputs.length-1))\n                                }} > <RemoveOutlinedIcon color=\"action\" /> </Button >\n                        </Tooltip>\n                    </div>\n                </div>\n\n                <Divider color=\"inherit\" orientation=\"vertical\" style={{ padding: '0.5px', height: '100%', float: 'left' }} />\n\n                <div style={{width: '45%', float: 'left' }}>\n                    <div style={styles.main}>\n                        {inputs.map(() => (\n                            <div style={styles.item}>\n                                <input type=\"text\" placeholder=\"String\" onChange={(strInput) => validate(strInput)} onClick={(strInput) => {validate(strInput); strInput.target.placeholder = \"\";}} style={styles.input}/>\n                            </div>\n                        ))}\n                    </div>\n                    <div style={styles.footer}>\n                        <Tooltip title=\"Adicionar\">\n                            <Button style={styles.button} onClick={() => {\n                                if(inputs.length < 10)\n                                    setInputs([...inputs, 1])\n                                }} > <AddOutlinedIcon color=\"action\"/> </Button >\n                        </Tooltip>\n                        <Tooltip title=\"Remover\">\n                            <Button style={styles.button} onClick={() => {\n                                if(inputs.length > 1)\n                                    setInputs(inputs.slice(0, inputs.length-1))\n                                }} > <RemoveOutlinedIcon color=\"action\" /> </Button >\n                        </Tooltip>\n                    </div>\n                </div>\n            </div>\n\n            <div style={styles.helper}>            \n                <HtmlTooltip placement=\"top\"\n                    title={\n                    <React.Fragment>\n                        <Typography  color=\"inherit\">Gramática regular</Typography>\n                        {'Insira as regras da gramática:'} <br/>\n                        <b>{'S -> a'}</b> {' | '} <b>{'bS'}</b> {' | '} <b>{' λ'}</b> <br/><br/>\n                        <b>{'ATENÇÃO!'}</b><br/> {'  Gramáticas aceitas: GLD, GLUD, GLE e GLUE.'}\n                        <br/> {'  O símbolo de início, será o primeiro da lista de regras.'} <br/>\n                        <br/>{'Em seguida, acrescente as strings para validar.'} <br/>\n                        {'Elas serão validadas quando são clicadas.'}                        \n                    </React.Fragment>\n                    }>\n                    <HelpOutlineIcon color=\"action\" />\n                </HtmlTooltip>\n            </div>    \n        </Container>\n    )\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 420,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }))(Tooltip);\n\nconst styles = {\n    container: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    helper: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        marginRight: '10px'\n    },\n    button: {\n        borderRadius: '5px',\n        height: '30px',\n        width: '20px',\n        transitionDuration: '0.5s',\n        marginRight: '10px'\n    },\n    header:\n    {\n        paddingBottom: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    text: {\n        fontSize: '30px',\n        textAlign: 'center',\n        margin: '0'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    main: {\n        paddingBottom: '20px',\n        margin: '0 auto',\n        display: 'flex',\n        flexFlow: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n    },\n    item: {\n        padding: '5px',\n    },\n    input: {\n        borderWidth: \"3px\", \n        borderColor: \"black\",\n        borderStyle: \"solid\",\n        borderRadius: \"5px\",\n        height: \"50px\",\n        width: \"200px\",\n        outline: \"0\",\n        fontSize: \"20px\"\n     },\n     input2: {\n         borderWidth: \"3px\", \n         borderColor: \"black\",\n         borderStyle: \"solid\",\n         borderRadius: \"5px\",\n         height: \"50px\",\n         width: \"120px\",\n         outline: \"0\",\n         fontSize: \"20px\"\n      }\n}","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Graph } from 'react-d3-graph';\nimport Button from '@material-ui/core/Button/Button';\nimport Delete from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport Container from '@material-ui/core/Container/Container';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport RemoveOutlinedIcon from '@material-ui/icons/RemoveOutlined';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nexport default function AutoFin() {\n\n    const [nodes, setNodes] = useState([\n        { id: 'q0', symbolType: 'diamond' },\n        { id: 'q1', color: 'red' },\n        { id: 'q2', color: 'red' }\n    ]);\n    const [transitions, setTransitions] = useState([\n        { source: 'q0', target: 'q1', label: 'a' },\n        { source: 'q0', target: 'q2', label: 'b' },\n    ]);\n    const [transitionInput, setTransitionInput] = useState({ source: '', target: '', label: 'λ' });\n    const [deleteMode, setDeleteMode] = useState(false);\n    const [inputs, setInputs] = useState([1]);\n\n    const myConfig = {\n        nodeHighlightBehavior: true,\n        linkHighlightBehavior: true,\n        directed: true,\n        maxZoom: 7,\n        width: 800,\n        node: {\n          color: \"black\",\n          size: 120,\n          highlightStrokeColor: \"blue\",\n          labelPosition: 'top'\n        },\n        link: {\n          highlightColor: \"lightblue\",\n          renderLabel: true\n        },\n      };\n\n    const onClickNode = nodeId => {\n        if(deleteMode){\n            setTransitions(transitions.filter(t => t.source !== nodeId && t.target !== nodeId));\n            setNodes(nodes.filter(node => node.id !== nodeId));\n        } else {\n            setNodes(nodes.map(node => {\n                if(node.id === nodeId){\n                    if(node.color === 'red') node.color = 'black';\n                    else node.color = 'red';\n                };\n                return node;\n            }))\n        }\n    };\n\n    const validate = strInput => {\n        let charCode = 65;\n        const str = strInput.target.value;\n        let tempTransitions = [];\n        let tempNodes = [];\n        transitions.forEach(tr => tempTransitions.push(Object.assign({}, tr)));\n        nodes.forEach(node => tempNodes.push(Object.assign({}, node)));\n\n\n        tempNodes = tempNodes.map(node => {\n            const newValue = String.fromCharCode(charCode);\n            tempTransitions.map(tr => {\n                if(tr.source === node.id) tr.source = newValue;\n                if(tr.target === node.id) tr.target = newValue;\n            });\n            node.id = newValue;\n            let type = [];\n            if(node.symbolType === 'diamond') type.push('initial');\n            if(node.color === 'red') type.push('final');\n            node.type = type;\n            charCode += 1;\n            return node;\n        });\n\n\n        let grammar = [];\n        for(let i=0 ; i < tempTransitions.length ; i++){\n            let initial = tempTransitions[i].source;\n            let final = tempTransitions[i].target;\n            let value = tempTransitions[i].label;\n\n            let rules = grammar.find(row => row.leftSide === initial); \n\n            if(!rules){\n                if(value === 'λ') grammar.push({leftSide: initial, rightSide: [final]});\n                else grammar.push({leftSide: initial, rightSide: [value + final]});\n            }\n            else {\n                if(value === 'λ') rules.rightSide.push(final);\n                else rules.rightSide.push(value + final);\n            };\n        };\n        for(let i=0 ; i < tempNodes.length ; i++){\n            let initial = tempNodes[i].id;\n            let type = tempNodes[i].type.find(row => row === 'final');\n            if(type){ //Se é final\n                let rules = grammar.find(row => row.leftSide === initial);\n\n                if(!rules) //Se não tem\n                    grammar.push({leftSide: initial, rightSide: ['λ']});\n                else //Se tem\n                    rules.rightSide.push('λ');\n            }\n        }\n        for(let i=0 ; i<tempNodes.length ; i++){\n            let initial = tempNodes[i].id;\n            let type = tempNodes[i].type.find(row => row === 'initial');\n\n            if(type){\n                let rules = grammar.find(row => row.leftSide === initial); //Verificando se existe regra com aquele simbolo\n                grammar = grammar.filter(item => item !== rules);\n                grammar.unshift(rules);\n            };\n        };\n        console.log(transitions);\n        console.log(grammar);\n        for(let rule of grammar[0].rightSide){\n            if(matchD(str, rule, grammar)){\n                strInput.target.style.borderColor = \"ForestGreen\";\n                return;\n            };\n        }\n        strInput.target.style.borderColor = 'FireBrick';\n    }\n\n    const matchD = (str, rule, arr) => {\n        if(rule.length - 1 > str.length) return false;\n    \n        const nextRule = rule[rule.length - 1];\n    \n        //Verificando caractere vazio\n        if(nextRule === 'λ' && (rule.slice(0, rule.length - 1) === str && rule.slice(0, rule.length - 1).length === str.length)) return true;\n        \n        if(nextRule === nextRule.toLowerCase()) return rule === str;\n        \n        const rules = arr.find(row => row.leftSide === nextRule);\n    \n        if(!rules) return false;\n        for(let r of rules.rightSide)\n        {\n            if(matchD(str, rule.replace(nextRule, r), arr)){\n                return true;\n            }\n        }\n    };\n\n    return (\n        <Container maxWidth='lg' style={styles.container}>\n            <header style={styles.header}>\n            <Link style={styles.button} to=\"/\" width=\"20px\" height=\"40px\">\n                <Tooltip title=\"Voltar\"><Button style={styles.button}><ArrowBackIcon color=\"action\"/></Button></Tooltip>\n            </Link>\n            \n            <p style={styles.text}>Autômato finito</p>\n            </header>\n            <Divider color=\"inherit\" style={{ padding: '0.5px', width: '95%', alignSelf: 'center' }} />\n            \n            <div style={{ height: '20%' ,display: 'flex', justifyContent: 'space-between', padding: '0 2.5% 0 2.5%', alignItems: 'center' }}>\n                \n                <div>\n                    <Button\n                        variant='contained'\n                        color='default'\n                        onClick={() => {\n                            if(nodes.length > 0) setNodes([ ...nodes, { id: `q${parseInt(nodes[nodes.length - 1].id[1]) + 1}` }]);\n                            else setNodes([{ id: 'q0', symbolType: 'diamond' }]);\n                        }}\n                    >Adicionar estado</Button>\n                </div>\n                <div style={{ display: 'flex', height: '90%' }}>\n                    <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n                        <input\n                            placeholder={'Nó inicial:'}\n                            style={styles.input}\n                            value={transitionInput.source}\n                            onChange={e => setTransitionInput({ ...transitionInput, source: e.target.value })}\n                        />\n                        <input\n                            placeholder={'Nó final:'}\n                            style={styles.input}\n                            value={transitionInput.target}\n                            onChange={e => setTransitionInput({ ...transitionInput, target: e.target.value })}\n                        />\n                        <input\n                            placeholder={'Estado:'}\n                            style={styles.input}\n                            value={transitionInput.label}\n                            onChange={e => setTransitionInput({ ...transitionInput, label: e.target.value })}\n                        />\n                    </div>\n                    <div style={{ paddingLeft: '10px', display: 'flex', alignItems: 'center' }}>\n                        <Button\n                            variant='contained'\n                            color='default'\n                            onClick={() => {\n                                const tr = transitions.find(t => t.source === transitionInput.source && t.target === transitionInput.target && t.label === transitionInput.label);\n                                if(!tr) setTransitions([ ...transitions, transitionInput ]);\n                                setTransitionInput({ source: '', target: '', label: 'λ' });\n                            }}\n                        >Adicionar transição</Button>\n                    </div>\n                </div>\n                <div>\n                    <Button\n                        variant='contained'\n                        color={deleteMode ? 'secondary' : 'default'}\n                        onClick={() => setDeleteMode(!deleteMode)}\n                    >\n                        <Delete />\n                    </Button>\n                </div>\n            </div>\n            <Divider color=\"inherit\" style={{ padding: '0.5px', width: '95%', alignSelf: 'center' }} />\n            <div style={{ height: '80%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ width: '20%', height: '100%', display: 'flex', alignItems: 'center' }}>\n                    <div style={{width: '100%', float: 'left' }}>\n                        <div>\n                            {inputs.map(() => (\n                                <div>\n                                    <input type=\"text\" placeholder=\"String\" onChange={(strInput) => validate(strInput)} onClick={(strInput) => {validate(strInput); strInput.target.placeholder = \"\";}} style={styles.input}/>\n                                </div>\n                            ))}\n                        </div>\n                        <div style={styles.footer}>\n                            <Tooltip title=\"Adicionar\">\n                                <Button style={styles.button} onClick={() => {\n                                    if(inputs.length < 7)\n                                        setInputs([...inputs, 1])\n                                    }} > <AddOutlinedIcon color=\"action\"/> </Button >\n                            </Tooltip>\n                            <Tooltip title=\"Remover\">\n                                <Button style={styles.button} onClick={() => {\n                                    if(inputs.length > 1)\n                                        setInputs(inputs.slice(0, inputs.length-1))\n                                    }} > <RemoveOutlinedIcon color=\"action\" /> </Button >\n                            </Tooltip>\n                        </div>\n                    </div>\n                </div>\n                <Graph\n                    id='graph-id'\n                    data={{\n                        nodes: nodes,\n                        links: transitions\n                    }}\n                    config={myConfig}\n                    onClickNode={onClickNode}\n                />\n            </div>\n            <div style={styles.helper}>            \n                <HtmlTooltip placement=\"top\"\n                    title={\n                    <React.Fragment>\n                        <Typography  color=\"inherit\">Autômato finito </Typography>\n                        <b>{'Estado preto:'} </b>{'estado normal'} <br/>\n                        <b>{'Estado vermelho:'} </b>{'estado final'} <br/>\n                        <b>{'Losango:'} </b>{'estado inicial'} <br/>\n                        <br/> {'O estado inicial será o primeiro inserido.'} <br/>\n                        <br/>{'Em seguida, acrescente as strings para validar.'} <br/>\n                        {'Elas serão validadas quando são clicadas.'}                        \n                    </React.Fragment>\n                    }>\n                    <HelpOutlineIcon color=\"action\" />\n                </HtmlTooltip>\n            </div>\n        </Container>\n    )\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 420,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }))(Tooltip);\n\nconst styles = {\n    input: {\n        borderWidth: \"3px\", \n        borderColor: \"black\",\n        borderStyle: \"solid\",\n        borderRadius: \"5px\",\n        height: \"30px\",\n        width: \"250px\",\n        outline: \"0\",\n        fontSize: \"20px\",\n        marginBottom: '10px'\n    },\n    helper: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        marginRight: '10px'\n    },\n    footer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    container: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    button: {\n        borderRadius: '5px',\n        height: '30px',\n        width: '20px',\n        transitionDuration: '0.5s',\n        marginRight: '10px'\n    },\n    header: {\n        paddingBottom: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    text: {\n        fontSize: '30px',\n        textAlign: 'center',\n        margin: '0'\n    },\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport Regex from './components/pages/Regex';\nimport Gramatica from './components/pages/Gramatica';\nimport AutoFin from './components/pages/AutoFin';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/gramatica' component={Gramatica} />\n        <Route path='/regex' component={Regex} />\n        <Route path='/autofin' component={AutoFin} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}